apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    useLibrary 'android.test.base'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName rootProject.ext.VERSION_NAME
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'androidx.lifecycle:lifecycle-common:2.3.1'
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation "org.mockito:mockito-core:2.8.9"
    androidTestImplementation "org.mockito:mockito-android:2.8.9"
}

version = rootProject.ext.VERSION_NAME
group = rootProject.ext.GROUP

if (rootProject.file('gradle/WeChatPublish.gradle').exists()) {
    if("External" == rootProject.ext.PUBLISH_CHANNEL){
        apply from: rootProject.file('gradle/android-publish.gradle')
    }else {
        //uploading to WeChat maven repo
        apply from: rootProject.file('gradle/WeChatPublish.gradle')
        wechatPublish {
            artifactId=POM_ARTIFACT_ID
        }
    }
}
